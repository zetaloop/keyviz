name: Build

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        # os: [ubuntu-latest, windows-latest, macos-latest]
        os: [windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install platform dependencies
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          apt update
          apt install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libstdc++-12-dev
          apt install -y libappindicator3-dev
        # elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
        elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          choco install -y zip
        fi
      shell: bash

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: stable

    - name: Install project dependencies
      run: flutter pub get

    - name: Build for ${{ matrix.os }}
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          flutter build linux
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          flutter build macos
        elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          flutter build windows
        fi
      shell: bash

    - name: Pack releases
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          pushd build/linux/x64/release/bundle
          zip -r ../../../../keyviz-release-linux.zip .
          popd
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          pushd build/macos
          zip -r ../keyviz-release-macos.zip .
          popd
        elif [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          pushd build/windows/x64/runner/Release
          zip -r ../../../../keyviz-release-windows.zip .
          popd
        fi
      shell: bash

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-build
        path: build/keyviz-release-*
